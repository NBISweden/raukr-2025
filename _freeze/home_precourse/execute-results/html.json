{
  "hash": "a4b12da5d2d7c1be4dacd403f6df1dc8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Precourse\"\npagetitle: \"RaukR 2025 • Precourse\"\ndescription: \"Preparation and system set-up for the workshop\"\ndate: \"\"\nsidebar: false\nformat: html\n---\n\n\n\n## Location\n\n<iframe width=\"100%\" height=\"500px\" frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\" src=\"https://use.mazemap.com/embed.html#v=1&amp;campusid=100&amp;zlevel=2&amp;center=18.288745,57.639640&amp;zoom=19.8&amp;sharepoitype=poi&amp;sharepoi=293352&amp;utm_medium=iframe\" allow=\"geolocation\" title=\"Campus Gotland\"></iframe>\n\n**Campus Gotland**  \nUppsala University  \nCramérgatan 3  \n621 57 Visby  \nGotland, Sweden  \n\nWe will use classrooms B25 and B27 on Floor 2 (on map) throughout the workshop. B26 is also available for breakout sessions or group discussions etc. Lunches will be served in the Cafe next to it on the ground floor.\n\n::: {.callout-tip}\nIf you have an door access card for Uppsala university, take it with you.\n:::\n\n## Computer\n\nYou can use any system you like, but we recommend using a Linux or Mac system. If you are using Windows, we recommend using WSL2 (Windows Subsystem for Linux). This will allow you to run a Linux environment on your Windows machine. It's good to have about 20GB of free space on your system.\n\n::: {.callout-warning}\nMake sure you have administrative rights on your system. You will need to install software and packages. Make sure you set-up Eduroam for wifi at your home institution before you leave.\n:::\n\n## Software\n\nYou will need the following list of software tools and a long list of R packages for the Hands-on practical labs.\n\n- R 4.4\n- IDE (Latest RStudio, Positron or VS Code)\n- Quarto 1.5.57 or newer\n- Conda (Miniconda or Miniforge recommended)\n- Slack (https://raukr.slack.com/) Invitation will be sent to your email\n- Git\n- Browser (Chrome, Firefox, Safari etc)\n- Docker (Optional)\n\n### Conda\n\nInstall Miniconda or Miniforge. Test that it works and then create a new environment and activate it.\n\n\n\n::: {.cell filename='Terminal'}\n\n```{.sh .cell-code}\nconda create -n raukr -c conda-forge -c bioconda r-base=4.4 r-tidyverse r-essentials r-svglite quarto freetype libpng libxml2 pkg-config zlib xz bioconda::htslib\nconda activate raukr\n```\n:::\n\n\n\nTo install packages, either follow the **Manual installation** or the **renv** installation instructions below. If you are using the docker container, you don't need Conda.\n\n## R packages\n\nYou can save valuable time during the labs by setting up the environment and installing the R packages in advance. There are a few different ways to approach this:\n\n- Manual installation\n- Using renv\n- Using docker container\n\n### Manual installation\n\nYou assume full responsibility for setting up your environment. This means you will need to install R, RStudio and R packages on your own. You can have a local installation but we suggest that you work in a Conda environment. Here is the list of R packages you will need to install:\n\n\n\n::: {.cell}\n\n:::\n\n\n\nInstall CRAN packages if they are not already installed.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```{.sourceCode .r}\npkgs_cran <- c('BiocManager', 'bsplus', 'devtools', 'dplyr', 'DT', 'eulerr', 'fontawesome', 'ggiraph', 'ggplot2', 'ggrepel', 'gitcreds', 'googledrive', 'gt', 'here', 'htmltools', 'hues', 'jsonlite', 'kableExtra', 'keras', 'knitr', 'lubridate', 'magrittr', 'MASS', 'microbenchmark', 'optparse', 'patchwork', 'peakRAM', 'plotly', 'profr', 'proftools', 'profvis', 'pryr', 'purrr', 'R.utils', 'R6', 'readr', 'readxl', 'remotes', 'renv', 'reticulate', 'rlang', 'rmarkdown', 'roxygen2', 'rpart', 'rpart.plot', 'shiny', 'sm', 'spatstat', 'stringr', 'tibble', 'tictoc', 'tidyr', 'tidyverse', 'usethis')\n\nfor( pkg in pkgs_cran) {\n  if (!requireNamespace(pkg, quietly = TRUE)) {\n    install.packages(pkg, repos = 'https://packagemanager.rstudio.com/all/latest', verbose = TRUE)\n  }\n}\n```\n\n\n:::\n:::\n\n\n\nInstall Bioconductor packages.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```{.sourceCode .r}\nBiocManager::install(c('Rgraphviz','RNASeqPower','ShortRead'), update = TRUE, ask = FALSE)\n```\n\n\n:::\n:::\n\n\n\nInstall GitHub packages.\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```{.sourceCode .r}\nremotes::install_github(repo = 'rstudio/EDAWR', ref = 'fbfee98447826f6b199a482715f3b7dadd311da3', host = 'api.github.com')\nremotes::install_github(repo = 'hadley/emo', ref = '3f03b11491ce3d6fc5601e210927eff73bf8e350', host = 'api.github.com')\n```\n\n\n:::\n:::\n\n\n\n### Using renv\n\nYou can use the `renv` package to create a reproducible environment for your project. This will allow you to install all the required packages in a single command. First download the renv lockfile.\n\n<a class=\"btn btn-primary btn-sm\" href=\"https://raw.githubusercontent.com/NBISweden/raukr-2025/refs/heads/main/docker/renv.lock\" role=\"button\" target=\"_blank\">{{< fa download >}} renv.lock</a>\n\nInstall the **renv** R package and use it to restore the environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('renv', repos = 'https://packagemanager.rstudio.com/all/latest', verbose = TRUE)\nrenv::restore()\n```\n:::\n\n\n\n### Using docker container\n\nWe provide a docker container with all the required packages pre-installed. This is the easiest way to set up your environment, as you don't need an R or RStudio installation on your local machine. But you will need to have docker installed. \n\nRun the following command in the terminal.\n\n\n\n::: {.cell filename='Terminal'}\n\n```{.sh .cell-code}\ndocker run --platform=linux/amd64 -e PASSWORD=raukr -p 8787:8787 -p 4200:4200 -v ${PWD}:/home/rstudio/work ghcr.io/nbisweden/workshop-raukr:latest\n```\n:::\n\n\n\nIn the browser, go to [http://localhost:8787/](http://localhost:8787/). Use following credentials:\n\n> username: rstudio  \n> password: raukr\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}