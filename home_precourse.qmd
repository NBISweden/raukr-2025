---
title: "Precourse"
pagetitle: "RaukR 2025 • Precourse"
description: "Preparation and system set-up for the workshop"
date: ""
sidebar: false
format: html
---

## Location

<iframe width="100%" height="500px" frameBorder="0" scrolling="no" marginHeight="0" marginWidth="0" src="https://use.mazemap.com/embed.html#v=1&amp;campusid=100&amp;zlevel=2&amp;center=18.288745,57.639640&amp;zoom=19.8&amp;sharepoitype=poi&amp;sharepoi=293352&amp;utm_medium=iframe" allow="geolocation" title="Campus Gotland"></iframe>

**Campus Gotland**  
Uppsala University  
Cramérgatan 3  
621 57 Visby  
Gotland, Sweden  

We will use classrooms B25 and B27 on Floor 2 (on map) throughout the workshop. B26 is also available for breakout sessions or group discussions etc. Lunches will be served in the Cafe next to it on the ground floor.

::: {.callout-tip}
If you have a door access card for Uppsala university, take it with you.
:::

## Computer

You can use any system you like, but we recommend using a Linux or Mac system. If you are using Windows, we recommend using WSL2 (Windows Subsystem for Linux). This will allow you to run a Linux environment on your Windows machine. It's good to have about 20GB of free space on your system.

::: {.callout-warning}
Make sure you have administrative rights on your system. You will need to install software and packages. Make sure you set-up Eduroam for wifi at your home institution before you leave.
:::

## Software

You will need the following list of software tools and a long list of R packages for the Hands-on practical labs.

- R 4.4
- IDE (Latest RStudio, Positron or VS Code)
- Quarto 1.5.57 or newer
- Conda (Miniconda or Miniforge recommended)
- Slack (https://raukr.slack.com/) Invitation will be sent to your email
- Git
- Browser (Chrome, Firefox, Safari etc)
- Docker (Optional)

### Conda

Install Miniconda or Miniforge. Test that it works and then create a new environment and activate it.

```{sh}
#| eval: false
#| filename: Terminal
conda create -n raukr -c conda-forge -c bioconda r-base=4.4 r-tidyverse r-essentials r-svglite quarto freetype libpng libxml2 pkg-config zlib xz bioconda::htslib
conda activate raukr
```

To install packages, either follow the **Manual installation** or the **renv** installation instructions below. If you are using the docker container, you don't need Conda.

## R packages

You can save valuable time during the labs by setting up the environment and installing the R packages in advance. There are a few different ways to approach this:

- Manual installation
- Using renv
- Using docker container

### Manual installation

You assume full responsibility for setting up your environment. This means you will need to install R, RStudio and R packages on your own. You can have a local installation but we suggest that you work in a Conda environment. Here is the list of R packages you will need to install:

```{r}
#| echo: false
#| results: hide

library(renv)
library(renvtools)
library(dplyr)

# discover packages used in materials
pkgs_found <- renv::dependencies() %>%
  distinct(Package) %>%
  arrange(Package)
# pkgs used for site and demo
pkgs_site <- c("googlesheets4", "toastui", "crosstalk", "dygraphs", "formattable", "highcharter", "networkD3", "reactable", "leaflet", "htmlTable", "renvtools")
# discard pkgs used for site and demo
pkgs_found <- pkgs_found %>%
  filter(!Package %in% pkgs_site)

# get pkg list from renv env
pkgs_renv <- read_lock("docker/renv.lock", format = "tibble")
# get intersect
pkgs_shared <- sort(intersect(pkgs_found$Package, pkgs_renv$Package))
p <- pkgs_renv %>% filter(Package %in% pkgs_shared)

p %>%
  group_by(Source, Repository) %>%
  tally()

# split pkgs into rpsm, bioc and github
p_rspm <- p %>% filter(Repository %in% c("CRAN", "RSPM"))
p_bioc <- p %>% filter(Source == "Bioconductor")
p_github <- p %>% filter(Source == "GitHub")
```

Install CRAN packages if they are not already installed.

```{r}
#| echo: false
#| class-output: sourceCode r
cat(paste0("pkgs_cran <- c('", paste0(sort(p_rspm$Package), collapse = "', '"), "')\n\n"))
cat("for( pkg in pkgs_cran) {\n")
cat(paste0("  if (!requireNamespace(pkg, quietly = TRUE)) {\n    install.packages(pkg, repos = 'https://packagemanager.rstudio.com/all/latest', verbose = TRUE)\n  }\n"))
cat("}\n")
```

Install Bioconductor packages.

```{r}
#| echo: false
#| class-output: sourceCode r
cat(paste0("BiocManager::install(c(", paste0("'", paste0(sort(p_bioc$Package), collapse = "','"), "'"), "), update = TRUE, ask = FALSE)"))
```

Install GitHub packages.

```{r}
#| echo: false
#| class-output: sourceCode r

if (nrow(p_github) > 0) {
  for (i in 1:nrow(p_github)) {
    pkg <- p_github$Package[i]
    repo <- paste(p_github$RemoteUsername[i], p_github$RemoteRepo[i], sep = "/")
    ref <- p_github$RemoteRef[i]
    host <- p_github$RemoteHost[i]
    cat(paste0("remotes::install_github(repo = '", repo, "', ref = '", ref, "', host = '", host, "')\n"))
  }
}
```

### Using renv

You can use the `renv` package to create a reproducible environment for your project. This will allow you to install all the required packages in a single command. First download the renv lockfile.

<a class="btn btn-primary btn-sm" href="https://raw.githubusercontent.com/NBISweden/raukr-2025/refs/heads/main/docker/renv.lock" role="button" target="_blank">{{< fa download >}} renv.lock</a>

Install the **renv** R package and use it to restore the environment.

```{r}
#| eval: false
install.packages('renv', repos = 'https://packagemanager.rstudio.com/all/latest', verbose = TRUE)
renv::restore()
```

### Using docker container

We provide a docker container with all the required packages pre-installed. This is the easiest way to set up your environment, as you don't need an R or RStudio installation on your local machine. But you will need to have docker installed. 

Run the following command in the terminal.

```{sh}
#| eval: false
#| filename: Terminal
docker run --platform=linux/amd64 -e PASSWORD=raukr -p 8787:8787 -p 4200:4200 -v ${PWD}:/home/rstudio/work ghcr.io/nbisweden/workshop-raukr:latest
```

In the browser, go to [http://localhost:8787/](http://localhost:8787/). Use following credentials:

> username: rstudio  
> password: raukr
